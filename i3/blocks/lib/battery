#!/usr/bin/python3

import psutil as ps
import time
from enum import Enum


class Level(Enum):
    PLUGGED = 1
    NORMAL = 2
    WARNING = 3
    ALERT = 4


# Setting

UPDATE_INTERVAL = 60
THRESHOLDS = {
    10: Level.ALERT,
    25: Level.WARNING
}
TMPLS = {
    Level.PLUGGED: "<span font='FontAwesome 10'>\uf1e6</span> {}%",
    Level.NORMAL: "<span font='FontAwesome 10'>\uf241</span> {}%",
    Level.WARNING: ("<span font='FontAwesome 10'>\uf243</span> "
                    "<span foreground='#f27835'>{}%</span>"),
    Level.ALERT: ("<span font='FontAwesome 10'>\uf244</span> "
                  "<span foreground='#fc4138'>{}%</span>")
}


# Core

def get_raw():
    """Get the current battery level and percentage remaining."""
    # TODO: Find out why this could often fail when plugged.
    battery = ps.sensors_battery()
    if battery is None:
        return None
    plugged = battery.power_plugged
    percent = int(battery.percent)

    if plugged:
        return Level.PLUGGED, percent
    for threshold, level in THRESHOLDS.items():
        if percent < threshold:
            return level, percent
    return Level.NORMAL, percent


def get_output():
    """Get a string for battery status."""
    raw = get_raw()
    if raw is None:
        return None
    level, percent = raw
    tmpl = TMPLS.get(level)
    return tmpl.format(percent)


# Print

if __name__ == "__main__":
    try:
        while True:
            output = get_output()
            # NOTE: When we fail to get the current battery status, it is
            # better to just keep and show the previous information.
            if output:
                print(output, flush=True)
            time.sleep(UPDATE_INTERVAL)
    except KeyboardInterrupt:
        pass
