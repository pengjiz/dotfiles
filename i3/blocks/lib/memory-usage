#!/usr/bin/python3

import psutil as ps
from enum import Enum


class Level(Enum):
    NORMAL = 1
    WARNING = 2
    ALERT = 3


# Setting

THRESHOLDS = {
    0.5: Level.ALERT,
    1: Level.WARNING
}

ICON = "<span font='FontAwesome 10'>\uf538</span>"
TMPLS = {
    Level.NORMAL: ICON + " {:.1f}G/{:.1f}G",
    Level.WARNING: ICON + " <span foreground='#f27835'>{:.1f}G</span>/{:.1f}G",
    Level.ALERT: ICON + "  <span foreground='#fc4138'>{:.1f}G</span>/{:.1f}G"
}


# Helper

def convert_bytes(num):
    """Convert bytes to gigabytes."""
    return num / 1024 ** 3


# Get information

def get_raw():
    """Get available memory, total memory, and level of usage."""
    info = ps.virtual_memory()
    total = convert_bytes(info.total)
    avail = convert_bytes(info.available)

    for threshold, level in THRESHOLDS.items():
        if avail < threshold:
            return [level, avail, total]
    return [Level.NORMAL, avail, total]


# Get formatted string

def get_output():
    """Get a string for memory usage."""
    level, avail, total = get_raw()
    tmpl = TMPLS.get(level)
    return tmpl.format(avail, total)


# Print

if __name__ == "__main__":
    try:
        print(get_output())
    except KeyboardInterrupt:
        pass
